# Generated by Django 5.0.1 on 2024-03-01 14:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Armour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "type",
                    models.TextField(
                        choices=[
                            ("HEAD", "Head armour"),
                            ("BODY", "Body armour"),
                            ("LEFT_ARM", "Left arm armour"),
                            ("RIGHT_ARM", "Right arm armour"),
                            ("LEFT_LEG", "Left leg armour"),
                            ("RIGHT_LEG", "Right leg armour"),
                        ]
                    ),
                ),
            ],
            options={
                "db_table": "armour",
            },
        ),
        migrations.CreateModel(
            name="CareerPath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "career_path",
            },
        ),
        migrations.CreateModel(
            name="Divination",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "divination",
            },
        ),
        migrations.CreateModel(
            name="Gear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "gear",
            },
        ),
        migrations.CreateModel(
            name="Mutation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
            options={
                "db_table": "mutation",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "type",
                    models.CharField(
                        choices=[("BASIC", "Basic"), ("ADVANCED", "Advanced")],
                        max_length=64,
                    ),
                ),
                (
                    "characteristic",
                    models.CharField(
                        choices=[
                            ("WS", "Weapon skill"),
                            ("BS", "Ballistic skill"),
                            ("S", "Strength"),
                            ("T", "Toughness"),
                            ("Ag", "Agility"),
                            ("Int", "Intelligence"),
                            ("Per", "Perception"),
                            ("WP", "Willpower"),
                            ("Fel", "Fellowship"),
                        ],
                        max_length=4,
                        unique=True,
                    ),
                ),
                ("descriptor", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "skill",
            },
        ),
        migrations.CreateModel(
            name="Talent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("prerequisites", models.TextField(blank=True)),
                ("benefit", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("group", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "talent",
            },
        ),
        migrations.CreateModel(
            name="Trait",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                ("full_description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "trait",
            },
        ),
        migrations.CreateModel(
            name="CareerRank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                ("min_xp", models.IntegerField()),
                ("max_xp", models.IntegerField()),
                ("rank_level", models.IntegerField()),
                (
                    "career_path",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ranks",
                        to="character.careerpath",
                    ),
                ),
            ],
            options={
                "db_table": "career_rank",
            },
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                (
                    "wound",
                    models.IntegerField(blank=True, null=True, verbose_name="HP"),
                ),
                (
                    "fate_point",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Fate Points"
                    ),
                ),
                (
                    "wealth",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Initial capital"
                    ),
                ),
                ("sex", models.CharField(blank=True, max_length=32)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("hair_color", models.CharField(blank=True, max_length=32)),
                ("eye_color", models.CharField(blank=True, max_length=32)),
                ("skin_color", models.CharField(blank=True, max_length=32)),
                (
                    "armours",
                    models.ManyToManyField(
                        blank=True, db_table="character_armour", to="character.armour"
                    ),
                ),
                (
                    "career_path",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.careerpath",
                    ),
                ),
                (
                    "ranks",
                    models.ManyToManyField(
                        blank=True, db_table="character_rank", to="character.careerrank"
                    ),
                ),
                (
                    "divination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="character.divination",
                        verbose_name="Imperial Divination",
                    ),
                ),
                (
                    "gears",
                    models.ManyToManyField(
                        blank=True,
                        db_table="character_gear",
                        to="character.gear",
                        verbose_name="Equipments",
                    ),
                ),
            ],
            options={
                "db_table": "character",
            },
        ),
        migrations.CreateModel(
            name="CharacterCharacteristic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "characteristic",
                    models.CharField(
                        choices=[
                            ("WS", "Weapon skill"),
                            ("BS", "Ballistic skill"),
                            ("S", "Strength"),
                            ("T", "Toughness"),
                            ("Ag", "Agility"),
                            ("Int", "Intelligence"),
                            ("Per", "Perception"),
                            ("WP", "Willpower"),
                            ("Fel", "Fellowship"),
                        ],
                        max_length=4,
                        unique=True,
                    ),
                ),
                ("value", models.IntegerField()),
                (
                    "character",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="character.character",
                    ),
                ),
            ],
            options={
                "db_table": "character_characteristic",
            },
        ),
        migrations.AddField(
            model_name="careerpath",
            name="starting_gears",
            field=models.ManyToManyField(
                db_table="career_start_gear", to="character.gear"
            ),
        ),
        migrations.CreateModel(
            name="HomeWorld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                ("life_description", models.TextField(blank=True)),
                ("pc_description", models.TextField(blank=True)),
                ("start_roll", models.PositiveIntegerField()),
                ("end_roll", models.PositiveIntegerField()),
                (
                    "career_paths",
                    models.ManyToManyField(
                        db_table="home_world_career_path", to="character.careerpath"
                    ),
                ),
                (
                    "skills",
                    models.ManyToManyField(
                        db_table="home_world_skill", to="character.skill"
                    ),
                ),
                (
                    "traits",
                    models.ManyToManyField(
                        db_table="home_world_trait", to="character.trait"
                    ),
                ),
            ],
            options={
                "db_table": "home_world",
            },
        ),
        migrations.AddField(
            model_name="character",
            name="home_world",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="characters",
                to="character.homeworld",
            ),
        ),
        migrations.CreateModel(
            name="HomeWorldClass",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True)),
                (
                    "home_world",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classes",
                        to="character.homeworld",
                    ),
                ),
            ],
            options={
                "db_table": "home_world_class",
            },
        ),
        migrations.AddField(
            model_name="character",
            name="home_world_class",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="character.homeworldclass",
                verbose_name="Home World Class",
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="mutations",
            field=models.ManyToManyField(
                blank=True,
                db_table="character_mutation",
                to="character.mutation",
                verbose_name="Mutations",
            ),
        ),
        migrations.CreateModel(
            name="Quirk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "home_world",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quirks",
                        to="character.homeworld",
                    ),
                ),
            ],
            options={
                "db_table": "quirk",
            },
        ),
        migrations.AddField(
            model_name="character",
            name="quirks",
            field=models.ManyToManyField(
                blank=True, db_table="character_quirk", to="character.quirk"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="skills",
            field=models.ManyToManyField(
                blank=True, db_table="character_skill", to="character.skill"
            ),
        ),
        migrations.AddField(
            model_name="careerpath",
            name="starting_skills",
            field=models.ManyToManyField(
                db_table="career_start_skill", to="character.skill"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="talents",
            field=models.ManyToManyField(
                blank=True, db_table="character_talent", to="character.talent"
            ),
        ),
        migrations.AddField(
            model_name="careerpath",
            name="starting_talents",
            field=models.ManyToManyField(
                db_table="career_start_talent", to="character.talent"
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="traits",
            field=models.ManyToManyField(
                blank=True, db_table="character_trait", to="character.trait"
            ),
        ),
        migrations.AddField(
            model_name="careerpath",
            name="starting_traits",
            field=models.ManyToManyField(
                db_table="career_start_trait", to="character.trait"
            ),
        ),
    ]
